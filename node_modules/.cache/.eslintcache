[{"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\index.js":"1","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\Header\\Header.js":"2","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\AddStockPost\\AddStockPost.js":"3","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\StockHoldings\\StockHoldings.js":"4","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\App\\App.js":"5","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\context\\StocksContext.js":"6","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\UpdateStock\\UpdateStock.js":"7","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\routes\\LandingPage\\LandingPage.js":"8","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\navigation\\Nav.js":"9","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\routes\\Home\\Home.js":"10","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\routes\\Login\\Login.js":"11","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\routes\\SignUp\\SignUp.js":"12","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\StockDetails\\StockDetails.js":"13","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\UpdatePost\\UpdatePost.js":"14"},{"size":376,"mtime":1612886336656,"results":"15","hashOfConfig":"16"},{"size":198,"mtime":1612874224868,"results":"17","hashOfConfig":"16"},{"size":4050,"mtime":1613561214245,"results":"18","hashOfConfig":"16"},{"size":4439,"mtime":1613561126792,"results":"19","hashOfConfig":"16"},{"size":2659,"mtime":1613470021264,"results":"20","hashOfConfig":"16"},{"size":676,"mtime":1613145229449,"results":"21","hashOfConfig":"16"},{"size":4104,"mtime":1613490269975,"results":"22","hashOfConfig":"16"},{"size":1256,"mtime":1613489887865,"results":"23","hashOfConfig":"16"},{"size":361,"mtime":1613215253196,"results":"24","hashOfConfig":"16"},{"size":598,"mtime":1613469908593,"results":"25","hashOfConfig":"16"},{"size":132,"mtime":1613469646446,"results":"26","hashOfConfig":"16"},{"size":136,"mtime":1613469666969,"results":"27","hashOfConfig":"16"},{"size":2915,"mtime":1613560282236,"results":"28","hashOfConfig":"16"},{"size":360,"mtime":1613471937279,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"4kkath",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\index.js",[],["62","63"],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\Header\\Header.js",[],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\AddStockPost\\AddStockPost.js",[],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\StockHoldings\\StockHoldings.js",["64","65"],"import React, { useEffect, useContext } from \"react\";\r\nimport { StocksContext } from \"../../context/StocksContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./StockHoldings.css\";\r\n\r\nconst StockHoldings = (props) => {\r\n\r\n  const { stocks, setStocks } = useContext(StocksContext);\r\n  const { selectedTickerSymbol, setSelectedTickerSymbol } = useContext(StocksContext);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url = \"https://quiet-woodland-22837.herokuapp.com/api/stocks/home\";\r\n        // const url = \"http://localhost:3000/api/stocks/home/\";\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n          \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n        await fetch(url, options)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\"Error: \" + response.status);\r\n            }\r\n            return response.text();\r\n          })\r\n          .then((responseJson) => {\r\n            console.log(responseJson);\r\n            // setStocks(responseJson);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n    // Empty dependency array called here, which makes it run only once on MOUNT //\r\n  }, []);\r\n\r\n  const handleDelete = async (e, id) => {\r\n    // Prevents event from sending function to the table row //\r\n    e.stopPropagation();\r\n    try {\r\n      // const url = \"https://quiet-woodland-22837.herokuapp.com/\";\r\n      const url = `https://quiet-woodland-22837.herokuapp.com/api/stocks/${id}`;\r\n      const options = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      await fetch(url, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Error: \" + response.status);\r\n        }\r\n        // Find the specified id associated with the stock being deleted, and use filter to remove it and return the new array //\r\n        setStocks(\r\n          stocks.filter((stock) => {\r\n            return stock.id !== id;\r\n          })\r\n        );\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (e, id) => {\r\n    // Prevents event from sending function to the table row //\r\n    e.stopPropagation();\r\n    // Addds the following URL to the history //\r\n    history.push(`/stocks/${id}/update`);\r\n  };\r\n\r\n  const handleNavigateStock = (id, ticker_symbol) => {\r\n    setSelectedTickerSymbol(\r\n      ticker_symbol\r\n    );\r\n    history.push(`/stocks/${id}/`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"stockHoldings\">\r\n      <table className=\"holdingsTable\">\r\n        <thead>\r\n          <tr className=\"tableRow\">\r\n            <th scope=\"column1\">Ticker Symbol</th>\r\n            <th scope=\"column2\">Status</th>\r\n            <th scope=\"column3\">Value</th>\r\n            {/* <th scope=\"column6\">Edit</th> */}\r\n            <th scope=\"column7\">Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* If stocks exist, run the code */}\r\n          {stocks &&\r\n            stocks.map((stock) => {\r\n              return (\r\n                <tr\r\n                  key={stock.id}\r\n                  onClick={() => handleNavigateStock(stock.id, stock.ticker_symbol)}\r\n                  className=\"trow\"\r\n                >\r\n                  <td>{stock.ticker_symbol}</td>\r\n                  <td>{stock.recommendation_status}</td>\r\n                  <td>{stock.stock_value}</td>\r\n                  {/* <td>\r\n                    <button\r\n                      onClick={(e) => handleUpdate(e, stock.id)}\r\n                      className=\"btn\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </td> */}\r\n                  <td>\r\n                    {/* Use arrow function as a reference to the function so it executes on delete */}\r\n                    <button\r\n                      onClick={(e) => handleDelete(e, stock.id)}\r\n                      className=\"btn\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockHoldings;\r\n","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\App\\App.js",["66"],"// NEW BRANCH CONFIG\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../routes/Home/Home\";\r\nimport LandingPage from \"../routes/LandingPage/LandingPage\";\r\nimport Login from \"../routes/Login/Login\";\r\nimport SignUp from \"../routes/SignUp/SignUp\";\r\nimport StockDetails from \"../components/StockDetails/StockDetails\";\r\nimport UpdatePost from \"../components/UpdatePost/UpdatePost\";\r\nimport \"./App.css\";\r\nconst API_TOKEN = process.env.REACT_APP_POCKET_STOCKS_KEY;\r\n\r\n\r\nconst App = () => {\r\n  const [currentMarketPrice, setCurrentMarketPrice] = React.useState(0);\r\n  const [selectedTickerSymbol, setSelectedTickerSymbol] = React.useState(null);\r\n\r\n  // UPDATES THE TICKER SYMBOL SO IT CAN BE USED IN THE API CALL //\r\n  const setTicker = (chosenTickerSymbol) => {\r\n    setSelectedTickerSymbol(chosenTickerSymbol);\r\n  };\r\n\r\n  const getStockPrice = (ticker) => {\r\n    fetch(\r\n      `https://twelve-data1.p.rapidapi.com/price?symbol=${selectedTickerSymbol}&outputsize=30&format=json`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            `${API_TOKEN}`,\r\n          \"x-rapidapi-host\": \"twelve-data1.p.rapidapi.com\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(response.statusText);\r\n      })\r\n      .then((responseJson) => {\r\n        let price = parseFloat(responseJson.price);\r\n        let final = price.toFixed(2);\r\n        setCurrentMarketPrice(final);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route\r\n          exact\r\n          path=\"/home\"\r\n          render={() => {\r\n            return (\r\n              <Home\r\n                getStockPrice={getStockPrice}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/stocks/:id\"\r\n          render={() => {\r\n            return (\r\n              <StockDetails\r\n                getStockPrice={getStockPrice}\r\n                selectedTickerSymbol={selectedTickerSymbol}\r\n                setTicker={setTicker}\r\n                currentMarketPrice={currentMarketPrice}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Route exact path=\"/stocks/:id/update\" component={UpdatePost} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\context\\StocksContext.js",[],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\UpdateStock\\UpdateStock.js",[],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\routes\\LandingPage\\LandingPage.js",[],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\navigation\\Nav.js",[],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\routes\\Home\\Home.js",[],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\routes\\Login\\Login.js",[],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\routes\\SignUp\\SignUp.js",[],"C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\StockDetails\\StockDetails.js",["67","68","69"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { StocksContext } from \"../../context/StocksContext\";\r\nimport Nav from '../navigation/Nav';\r\n\r\n\r\nconst StockDetails = (props) => {\r\n  const { id } = useParams();\r\n  const { selectedStock, setSelectedStock } = useContext(StocksContext);\r\n  const { selectedTickerSymbol, setSelectedTickerSymbol } = useContext(\r\n    StocksContext\r\n    );\r\n  const [currentPost, setCurrentPost] = React.useState(\"\");\r\n  const [purchase_price, setPurchase_price] = React.useState(0);\r\n  const [ROI, setROI] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        // const url = \"https://fathomless-ravine-36841.herokuapp.com/\";\r\n        const url = `https://quiet-woodland-22837.herokuapp.com/api/stocks/${id}`;\r\n        const options = {\r\n          method: \"GET\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n        await fetch(url, options)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\"Error: \" + response.status);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((responseJson) => {\r\n            // CALLBACK PROP TO USE SET CONTEXT ON TICKER SYMBOL //\r\n            props.setTicker(responseJson.ticker_symbol);\r\n            // // UPDATES THE SELECTED STOCK ON PAGE LOAD //\r\n            setSelectedStock(responseJson.ticker_symbol);\r\n            // // UPDATES THE POST ON PAGE LOAD //\r\n            setCurrentPost(responseJson.posting);\r\n            // // SETS THE PURCHASE PRICE ON PAGE LOAD //\r\n            setPurchase_price(responseJson.purchase_price);\r\n          })\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n    // Empty dependency array called here, which makes it run only once on MOUNT //\r\n  }, []);\r\n  \r\n  const updateROI = () => {\r\n    let initial = purchase_price;\r\n    let current = props.currentMarketPrice;\r\n    let ROI = (((current - initial) / initial) * 100).toFixed(2) + \"%\";\r\n    setROI(ROI);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      {/* Renders only if a stock was selected */}\r\n      <h1>{selectedStock && selectedStock.ticker_symbol}</h1>\r\n      <div>\r\n        <p>Current Market Price: ${props.currentMarketPrice}</p>\r\n      </div>\r\n      <div>\r\n        <p>Purchase price: ${purchase_price}</p>\r\n      </div>\r\n      <div>\r\n        <p>ROI: {ROI}</p>\r\n      </div>\r\n      <div>\r\n        <p>Post: {currentPost}</p>\r\n      </div>\r\n      <button onClick={() => props.getStockPrice(selectedTickerSymbol)}>\r\n        Get current price\r\n      </button>\r\n      <br />\r\n      <button onClick={updateROI}>\r\n        Get ROI\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockDetails;\r\n","C:\\Users\\dvanp\\OneDrive\\Desktop\\Bloc\\projects\\pocket-stocks\\pocket-stocks-client\\src\\components\\UpdatePost\\UpdatePost.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":9,"column":11,"nodeType":"76","messageId":"77","endLine":9,"endColumn":31},{"ruleId":"74","severity":1,"message":"78","line":73,"column":9,"nodeType":"76","messageId":"77","endLine":73,"endColumn":21},{"ruleId":"74","severity":1,"message":"79","line":3,"column":17,"nodeType":"76","messageId":"77","endLine":3,"endColumn":25},{"ruleId":"74","severity":1,"message":"79","line":1,"column":40,"nodeType":"76","messageId":"77","endLine":1,"endColumn":48},{"ruleId":"74","severity":1,"message":"80","line":10,"column":33,"nodeType":"76","messageId":"77","endLine":10,"endColumn":56},{"ruleId":"81","severity":1,"message":"82","line":54,"column":6,"nodeType":"83","endLine":54,"endColumn":8,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'selectedTickerSymbol' is assigned a value but never used.","Identifier","unusedVar","'handleUpdate' is assigned a value but never used.","'useState' is defined but never used.","'setSelectedTickerSymbol' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id', 'props', and 'setSelectedStock'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [id, props, setSelectedStock]",{"range":"90","text":"91"},[2001,2003],"[id, props, setSelectedStock]"]