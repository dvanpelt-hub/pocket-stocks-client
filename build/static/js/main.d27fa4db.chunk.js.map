{"version":3,"sources":["context/StocksContext.js","components/Header/Header.js","components/AddStockPost/AddStockPost.js","components/StockHoldings/StockHoldings.js","components/navigation/Nav.js","routes/Home/Home.js","routes/LandingPage/LandingPage.js","routes/Login/Login.js","routes/SignUp/SignUp.js","components/StockDetails/StockDetails.js","components/UpdatePost/UpdatePost.js","App/App.js","index.js"],"names":["StocksContext","createContext","StockContextProvider","props","useState","stocks","setStocks","selectedStock","setSelectedStock","selectedTickerSymbol","setSelectedTickerSymbol","Provider","value","addStock","stock","children","Header","className","AddStockPost","useContext","ticker_symbol","setTicker_symbol","purchase_price","setPurchase_price","recommendation_status","setRecommendation_status","stock_value","setStock_value","posting","setPosting","action","type","placeholder","onChange","e","target","disabled","name","onClick","preventDefault","a","options","method","headers","Accept","body","JSON","stringify","fetch","then","response","ok","Error","status","json","responseJson","console","log","postData","StockHoldings","history","useHistory","useEffect","fetchData","handleDelete","id","stopPropagation","url","filter","scope","map","push","Nav","to","Home","getStockPrice","LandingPage","Component","Login","Signup","StockDetails","useParams","React","currentPost","setCurrentPost","ROI","setROI","mode","setTicker","currentMarketPrice","initial","toFixed","UpdatePost","App","setCurrentMarketPrice","chosenTickerSymbol","ticker","process","statusText","final","parseFloat","price","catch","err","exact","path","component","render","SignUp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d27fa4db.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const StocksContext = createContext();\r\n\r\nconst StockContextProvider = props => {\r\n\r\n  const [stocks, setStocks] = useState([]);\r\n\r\n  const [selectedStock, setSelectedStock] = useState(\"\");\r\n\r\n  const [selectedTickerSymbol, setSelectedTickerSymbol] = useState(\"\");\r\n\r\n  const addStock = (stock) => {\r\n    setStocks([...stocks, stock]);\r\n  };\r\n\r\n  return (\r\n    <StocksContext.Provider value={{stocks, setStocks, addStock, selectedStock, setSelectedStock, selectedTickerSymbol, setSelectedTickerSymbol}}>\r\n      {props.children}\r\n    </StocksContext.Provider>\r\n  )\r\n}\r\n\r\nexport default StockContextProvider;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"header\">Pocket Stocks</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { StocksContext } from \"../../context/StocksContext\";\r\nimport \"./AddStockPost.css\";\r\n\r\nconst AddStockPost = (props) => {\r\n  const { addStock } = useContext(StocksContext);\r\n  const [ticker_symbol, setTicker_symbol] = useState(\"\");\r\n  const [purchase_price, setPurchase_price] = useState(0);\r\n  const [recommendation_status, setRecommendation_status] = useState(\"Select\");\r\n  const [stock_value, setStock_value] = useState(\"Select\");\r\n  const [posting, setPosting] = useState(\"Enter up to 120 characters in a post\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const postData = async () => {\r\n      try {\r\n        const url = \"https://quiet-woodland-22837.herokuapp.com/api/stocks/home\";\r\n        const options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            ticker_symbol: ticker_symbol,\r\n            recommendation_status: recommendation_status,\r\n            stock_value: stock_value,\r\n            posting: posting,\r\n            purchase_price: purchase_price\r\n          }),\r\n        };\r\n        await fetch(url, options)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\"Error: \" + response.status);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((responseJson) => {\r\n            console.log(responseJson);\r\n            addStock(responseJson);\r\n          });\r\n        } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    postData();\r\n  };\r\n\r\n  return (\r\n    <div className=\"addStockSection\">\r\n      <form action=\"submit\">\r\n        <div className=\"form-row\">\r\n          <div className=\"form-column\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"inputTickerSymbol\"\r\n              placeholder=\"Ticker Symbol\"\r\n              value={ticker_symbol}\r\n              onChange={(e) => setTicker_symbol(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-column\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"inputPurchasePrice\"\r\n              placeholder=\"Purchase Price\"\r\n              value={purchase_price}\r\n              onChange={(e) => setPurchase_price(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-column\">\r\n            <select\r\n              className=\"chooseStatus\"\r\n              value={recommendation_status}\r\n              onChange={(e) => setRecommendation_status(e.target.value)}\r\n            >\r\n              <option disabled>Select</option>\r\n              <option value=\"BUY\">BUY</option>\r\n              <option value=\"HOLD\">HOLD</option>\r\n              <option value=\"SELL\">SELL</option>\r\n            </select>\r\n          </div>\r\n          <div\r\n            className=\"form-column\"\r\n            value={stock_value}\r\n            onChange={(e) => setStock_value(e.target.value)}\r\n          >\r\n            <select className=\"chooseStockValue\">\r\n              <option disabled>Select</option>\r\n              <option value=\"Overvalued\">Overvalued</option>\r\n              <option value=\"Undervalued\">Undervalued</option>\r\n              <option value=\"Accurate\">Accurate</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"commentSection\">\r\n          <textarea\r\n            name=\"comment\"\r\n            className=\"textbox\"\r\n            value={posting}\r\n            onChange={(e) => setPosting(e.target.value)}\r\n          />\r\n        </div>\r\n        <div onClick={handleSubmit} className=\"postButton\">\r\n          <button className=\"btn\">Post!</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStockPost;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { StocksContext } from \"../../context/StocksContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./StockHoldings.css\";\r\n\r\nconst StockHoldings = (props) => {\r\n  const { stocks, setStocks } = useContext(StocksContext);\r\n  const { selectedTickerSymbol, setSelectedTickerSymbol } = useContext(\r\n    StocksContext\r\n  );\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url =\r\n          \"https://quiet-woodland-22837.herokuapp.com/api/stocks/home\";\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n        await fetch(url, options)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\"Error: \" + response.status);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((responseJson) => {\r\n            setStocks(responseJson);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n    // Empty dependency array called here, which makes it run only once on MOUNT //\r\n  }, []);\r\n\r\n  const handleDelete = async (e, id) => {\r\n    // Prevents event from sending function to the table row //\r\n    e.stopPropagation();\r\n    try {\r\n      const url = `https://quiet-woodland-22837.herokuapp.com/api/stocks/${id}`;\r\n      const options = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      await fetch(url, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Error: \" + response.status);\r\n        }\r\n        // Find the specified id associated with the stock being deleted, and use filter to remove it and return the new array //\r\n        setStocks(\r\n          stocks.filter((stock) => {\r\n            return stock.id !== id;\r\n          })\r\n        );\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // const handleUpdate = (e, id) => {\r\n  //   // Prevents event from sending function to the table row //\r\n  //   e.stopPropagation();\r\n  //   // Addds the following URL to the history //\r\n  //   history.push(`/stocks/${id}/update`);\r\n  // };\r\n\r\n  const handleNavigateStock = (id, ticker_symbol) => {\r\n    setSelectedTickerSymbol(ticker_symbol);\r\n    history.push(`/stocks/${id}/`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"stockHoldings\">\r\n        <table className=\"holdingsTable\">\r\n          <thead>\r\n            <tr className=\"tableRow\">\r\n              <th scope=\"column1\">Ticker Symbol</th>\r\n              <th scope=\"column2\">Status</th>\r\n              <th scope=\"column3\">Value</th>\r\n              {/* <th scope=\"column6\">Edit</th> */}\r\n              <th scope=\"column7\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* If stocks exist, run the code */}\r\n            {stocks.map((stock) => {\r\n              return (\r\n                <tr\r\n                  key={stock.id}\r\n                  onClick={() =>\r\n                    handleNavigateStock(stock.id, stock.ticker_symbol)\r\n                  }\r\n                  className=\"trow\"\r\n                >\r\n                  <td>{stock.ticker_symbol}</td>\r\n                  <td>{stock.recommendation_status}</td>\r\n                  <td>{stock.stock_value}</td>\r\n                  {/* <td>\r\n                    <button\r\n                      onClick={(e) => handleUpdate(e, stock.id)}\r\n                      className=\"btn\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </td> */}\r\n                  <td>\r\n                    {/* Use arrow function as a reference to the function so it executes on delete */}\r\n                    <button\r\n                      onClick={(e) => handleDelete(e, stock.id)}\r\n                      className=\"btn\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockHoldings;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div className=\"links\">\r\n      <Link className=\"landing\" to=\"/\">\r\n        Home\r\n      </Link>\r\n      <br />\r\n      <Link className=\"holdings\" to=\"/home\">\r\n        Holdings\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport AddStockPost from \"../../components/AddStockPost/AddStockPost\";\r\nimport StockHoldings from \"../../components/StockHoldings/StockHoldings\";\r\nimport Nav from '../../components/navigation/Nav';\r\n\r\nconst Home = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Header />\r\n      <AddStockPost getStockPrice={props.getStockPrice} />\r\n      <StockHoldings\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LandingPage.css\";\r\n\r\nexport default class LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landingPage\">\r\n        <div className=\"links\">\r\n          <Link className=\"landing\" to=\"/\">\r\n            Home\r\n          </Link>\r\n          <br />\r\n          <Link className=\"holdings\" to=\"/home\">\r\n            Holdings\r\n          </Link>\r\n        </div>\r\n        <header>\r\n          <h1>Pocket Stocks</h1>\r\n          {/* <button className=\"join_button\" type=\"submit\">Sign up</button> */}\r\n        </header>\r\n        <section className=\"briefOV\">\r\n          <h3>Stock predictions in the palm of your hand</h3>\r\n          <p>\r\n            Everyone wants to say \"I told you so\". Say it with your stock market\r\n            predictions!\r\n          </p>\r\n        </section>\r\n        <section className=\"appDesc\">\r\n          <p>\r\n            To use this app, simply navigate to the 'Holdings' page, enter the\r\n            required information:\r\n            <ul>\r\n              <li>- Ticker Symbol</li>\r\n              <li>- Purchase Price</li>\r\n              <li>- Recommendation Status</li>\r\n              <li>\r\n                - Your Post, defending your position, forecasting, or just an\r\n                opinion\r\n              </li>\r\n            </ul>\r\n          </p>\r\n\r\n          <p>\r\n            Your post will be added to our database where other users can read\r\n            your post along with all others.\r\n          </p>\r\n\r\n        </section>\r\n        <div className=\"navHoldings\">\r\n          <Link className=\"navHold\" to=\"/home\">\r\n            Get Started!\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      Login\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <div>\r\n      Sign Up\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { StocksContext } from \"../../context/StocksContext\";\r\nimport Nav from \"../navigation/Nav\";\r\n\r\nconst StockDetails = (props) => {\r\n  const { id } = useParams();\r\n  const { selectedStock, setSelectedStock } = useContext(StocksContext);\r\n  const { selectedTickerSymbol, setSelectedTickerSymbol } = useContext(\r\n    StocksContext\r\n  );\r\n  const [currentPost, setCurrentPost] = React.useState(\"\");\r\n  const [purchase_price, setPurchase_price] = React.useState(0);\r\n  const [ROI, setROI] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url = `https://quiet-woodland-22837.herokuapp.com/api/stocks/${id}`;\r\n        const options = {\r\n          method: \"GET\",\r\n          mode: \"cors\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n        await fetch(url, options)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\"Error: \" + response.status);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((responseJson) => {\r\n            // CALLBACK PROP TO USE SET CONTEXT ON TICKER SYMBOL //\r\n            props.setTicker(responseJson.ticker_symbol);\r\n            // // UPDATES THE SELECTED STOCK ON PAGE LOAD //\r\n            setSelectedStock(responseJson.ticker_symbol);\r\n            // // UPDATES THE POST ON PAGE LOAD //\r\n            setCurrentPost(responseJson.posting);\r\n            // // SETS THE PURCHASE PRICE ON PAGE LOAD //\r\n            setPurchase_price(responseJson.purchase_price);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n    // Empty dependency array called here, which makes it run only once on MOUNT //\r\n  }, []);\r\n\r\n  const updateROI = () => {\r\n    let initial = purchase_price;\r\n    let current = props.currentMarketPrice;\r\n    let ROI = (((current - initial) / initial) * 100).toFixed(2) + \"%\";\r\n    setROI(ROI);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      {/* Renders only if a stock was selected */}\r\n      <h1>{selectedStock && selectedStock.ticker_symbol}</h1>\r\n      <div>\r\n        <p>Current Market Price: ${props.currentMarketPrice}</p>\r\n      </div>\r\n      <div>\r\n        <p>Purchase price: ${purchase_price}</p>\r\n      </div>\r\n      <div>\r\n        <p>ROI: {ROI}</p>\r\n      </div>\r\n      <div>\r\n        <p>Post: {currentPost}</p>\r\n      </div>\r\n      <button onClick={() => props.getStockPrice(selectedTickerSymbol)}>\r\n        Get current price\r\n      </button>\r\n      <br />\r\n      <button onClick={updateROI}>Get ROI</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockDetails;\r\n","import React from 'react';\r\nimport './UpdatePost.css';\r\nimport UpdateStock from '../UpdateStock/UpdateStock';\r\nimport Nav from '../navigation/Nav';\r\n\r\nconst UpdatePost = () => {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <h1 className=\"edit-position\">\r\n        Update Position\r\n      </h1>\r\n      <UpdateStock />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdatePost;\r\n","// NEW BRANCH CONFIG\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../routes/Home/Home\";\r\nimport LandingPage from \"../routes/LandingPage/LandingPage\";\r\nimport Login from \"../routes/Login/Login\";\r\nimport SignUp from \"../routes/SignUp/SignUp\";\r\nimport StockDetails from \"../components/StockDetails/StockDetails\";\r\nimport UpdatePost from \"../components/UpdatePost/UpdatePost\";\r\nimport \"./App.css\";\r\nconst API_TOKEN = process.env.REACT_APP_POCKET_STOCKS_KEY;\r\n\r\n\r\nconst App = () => {\r\n  const [currentMarketPrice, setCurrentMarketPrice] = React.useState(0);\r\n  const [selectedTickerSymbol, setSelectedTickerSymbol] = React.useState(null);\r\n\r\n  // UPDATES THE TICKER SYMBOL SO IT CAN BE USED IN THE API CALL //\r\n  const setTicker = (chosenTickerSymbol) => {\r\n    setSelectedTickerSymbol(chosenTickerSymbol);\r\n  };\r\n\r\n  const getStockPrice = (ticker) => {\r\n    fetch(\r\n      `https://twelve-data1.p.rapidapi.com/price?symbol=${selectedTickerSymbol}&outputsize=30&format=json`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            `${API_TOKEN}`,\r\n          \"x-rapidapi-host\": \"twelve-data1.p.rapidapi.com\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(response.statusText);\r\n      })\r\n      .then((responseJson) => {\r\n        let price = parseFloat(responseJson.price);\r\n        let final = price.toFixed(2);\r\n        setCurrentMarketPrice(final);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route\r\n          exact\r\n          path=\"/home\"\r\n          render={() => {\r\n            return (\r\n              <Home\r\n                getStockPrice={getStockPrice}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/stocks/:id\"\r\n          render={() => {\r\n            return (\r\n              <StockDetails\r\n                getStockPrice={getStockPrice}\r\n                selectedTickerSymbol={selectedTickerSymbol}\r\n                setTicker={setTicker}\r\n                currentMarketPrice={currentMarketPrice}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Route exact path=\"/stocks/:id/update\" component={UpdatePost} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport StockContextProvider from './context/StocksContext';\r\nimport App from \"./App/App\";\r\n\r\nReactDOM.render(\r\n  <StockContextProvider>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StockContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}