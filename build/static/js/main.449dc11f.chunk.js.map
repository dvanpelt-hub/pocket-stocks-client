{"version":3,"sources":["context/StocksContext.js","components/Header/Header.js","components/AddStockPost/AddStockPost.js","components/StockHoldings/StockHoldings.js","routes/Home.js","routes/LandingPage/LandingPage.js","routes/Login.js","routes/SignUp.js","routes/StockDetails.js","components/UpdateStock/UpdateStock.js","routes/UpdatePost/UpdatePost.js","App/App.js","index.js"],"names":["StocksContext","createContext","StockContextProvider","props","useState","stocks","setStocks","selectedStock","setSelectedStock","selectedTickerSymbol","setSelectedTickerSymbol","Provider","value","addStock","stock","children","Header","className","AddStockPost","useContext","addPosting","ticker_symbol","setTicker_symbol","purchase_price","setPurchase_price","recommendation_status","setRecommendation_status","stock_value","setStock_value","posting","setPosting","action","type","placeholder","onChange","e","target","disabled","name","onClick","preventDefault","a","options","method","headers","Accept","body","JSON","stringify","fetch","then","response","ok","Error","status","json","responseJson","holdings","console","log","postData","StockHoldings","history","useHistory","useEffect","fetchData","handleDelete","id","stopPropagation","url","filter","scope","map","push","handleUpdate","Home","React","getStockPrice","LandingPage","htmlFor","Component","Login","Signup","StockDetails","useParams","currentPost","setCurrentPost","ROI","setROI","setTicker","currentMarketPrice","initial","toFixed","UpdateStock","handleSubmit","UpdatePost","App","setCurrentMarketPrice","chosenTickerSymbol","ticker","process","statusText","final","parseFloat","price","catch","err","exact","path","component","render","SignUp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.449dc11f.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const StocksContext = createContext();\r\n\r\nconst StockContextProvider = props => {\r\n\r\n  const [stocks, setStocks] = useState([]);\r\n\r\n  const [selectedStock, setSelectedStock] = useState(null);\r\n\r\n  const [selectedTickerSymbol, setSelectedTickerSymbol] = useState(null);\r\n\r\n  const addStock = (stock) => {\r\n    setStocks([...stocks, stock]);\r\n  };\r\n\r\n  return (\r\n    <StocksContext.Provider value={{stocks, setStocks, addStock, selectedStock, setSelectedStock, selectedTickerSymbol, setSelectedTickerSymbol}}>\r\n      {props.children}\r\n    </StocksContext.Provider>\r\n  )\r\n}\r\n\r\nexport default StockContextProvider;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"header\">Pocket Stocks</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { StocksContext } from \"../../context/StocksContext\";\r\nimport \"./AddStockPost.css\";\r\n\r\nconst AddStockPost = (props) => {\r\n  const { addStock, addPosting } = useContext(StocksContext);\r\n  const [ticker_symbol, setTicker_symbol] = useState(\"\");\r\n  const [purchase_price, setPurchase_price] = useState(0);\r\n  const [recommendation_status, setRecommendation_status] = useState(\"Select\");\r\n  const [stock_value, setStock_value] = useState(\"Select\");\r\n  const [posting, setPosting] = useState(\"Enter up to 120 characters in a post\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const postData = async () => {\r\n      try {\r\n        const url = \"http://localhost:3000/api/v1/stocks\";\r\n        const options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            ticker_symbol: ticker_symbol,\r\n            recommendation_status: recommendation_status,\r\n            stock_value: stock_value,\r\n            posting: posting,\r\n            purchase_price: purchase_price\r\n          }),\r\n        };\r\n        await fetch(url, options)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\"Error: \" + response.status);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((responseJson) => {\r\n            // addPosting(responseJson.holdings.stock.posting);\r\n            addStock(responseJson.holdings.stock);\r\n          });\r\n        } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    postData();\r\n  };\r\n\r\n  return (\r\n    <div className=\"addStockSection\">\r\n      <form action=\"submit\">\r\n        <div className=\"form-row\">\r\n          <div className=\"form-column\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"inputTickerSymbol\"\r\n              placeholder=\"Ticker Symbol\"\r\n              value={ticker_symbol}\r\n              onChange={(e) => setTicker_symbol(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-column\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"inputPurchasePrice\"\r\n              placeholder=\"Purchase Price\"\r\n              value={purchase_price}\r\n              onChange={(e) => setPurchase_price(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-column\">\r\n            <select\r\n              className=\"chooseStatus\"\r\n              value={recommendation_status}\r\n              onChange={(e) => setRecommendation_status(e.target.value)}\r\n            >\r\n              <option disabled>Select</option>\r\n              <option value=\"BUY\">BUY</option>\r\n              <option value=\"HOLD\">HOLD</option>\r\n              <option value=\"SELL\">SELL</option>\r\n            </select>\r\n          </div>\r\n          <div\r\n            className=\"form-column\"\r\n            value={stock_value}\r\n            onChange={(e) => setStock_value(e.target.value)}\r\n          >\r\n            <select className=\"chooseStockValue\">\r\n              <option disabled>Select</option>\r\n              <option value=\"Overvalued\">Overvalued</option>\r\n              <option value=\"Undervalued\">Undervalued</option>\r\n              <option value=\"Accurate\">Accurate</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"commentSection\">\r\n          <textarea\r\n            name=\"comment\"\r\n            className=\"textbox\"\r\n            value={posting}\r\n            onChange={(e) => setPosting(e.target.value)}\r\n          />\r\n        </div>\r\n        <div onClick={handleSubmit} className=\"postButton\">\r\n          <button className=\"btn\">Post!</button>\r\n        </div>\r\n        {/* <div className=\"getUpdatedMarketPrices\">\r\n          <button onClick={props.getStockPrice} className=\"btn\">Refresh Prices</button>\r\n        </div> */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStockPost;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { StocksContext } from \"../../context/StocksContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./StockHoldings.css\";\r\n\r\nconst StockHoldings = (props) => {\r\n\r\n  const { stocks, setStocks } = useContext(StocksContext);\r\n  const { selectedTickerSymbol, setSelectedTickerSymbol } = useContext(StocksContext);\r\n\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url = \"http://localhost:3000/api/v1/stocks\";\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n        await fetch(url, options)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\"Error: \" + response.status);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((responseJson) => {\r\n            setStocks(responseJson.holdings.stocks);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n    // Empty dependency array called here, which makes it run only once on MOUNT //\r\n  }, []);\r\n\r\n  const handleDelete = async (e, id) => {\r\n    // Prevents event from sending function to the table row //\r\n    e.stopPropagation();\r\n    try {\r\n      const url = `http://localhost:3000/api/v1/stocks/${id}`;\r\n      const options = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      await fetch(url, options).then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Error: \" + response.status);\r\n        }\r\n        // Find the specified id associated with the stock being deleted, and use filter to remove it and return the new array //\r\n        setStocks(\r\n          stocks.filter((stock) => {\r\n            return stock.id !== id;\r\n          })\r\n        );\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (e, id) => {\r\n    // Prevents event from sending function to the table row //\r\n    e.stopPropagation();\r\n    // Addds the following URL to the history //\r\n    history.push(`/stocks/${id}/update`);\r\n  };\r\n\r\n  const handleNavigateStock = (id, ticker_symbol) => {\r\n    setSelectedTickerSymbol(\r\n      ticker_symbol\r\n    );\r\n    history.push(`/stocks/${id}/`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"stockHoldings\">\r\n      <table className=\"holdingsTable\">\r\n        <thead>\r\n          <tr className=\"tableRow\">\r\n            <th scope=\"column1\">Ticker Symbol</th>\r\n            <th scope=\"column2\">Status</th>\r\n            <th scope=\"column3\">Value</th>\r\n            <th scope=\"column6\">Edit</th>\r\n            <th scope=\"column7\">Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* If stocks exist, run the code */}\r\n          {stocks &&\r\n            stocks.map((stock) => {\r\n              return (\r\n                <tr\r\n                  key={stock.id}\r\n                  onClick={() => handleNavigateStock(stock.id, stock.ticker_symbol)}\r\n                  className=\"trow\"\r\n                >\r\n                  <td>{stock.ticker_symbol}</td>\r\n                  <td>{stock.recommendation_status}</td>\r\n                  <td>{stock.stock_value}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={(e) => handleUpdate(e, stock.id)}\r\n                      className=\"btn\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    {/* Use arrow function as a reference to the function so it executes on delete */}\r\n                    <button\r\n                      onClick={(e) => handleDelete(e, stock.id)}\r\n                      className=\"btn\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockHoldings;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header/Header\";\r\nimport AddStockPost from \"../components/AddStockPost/AddStockPost\";\r\nimport StockHoldings from \"../components/StockHoldings/StockHoldings\";\r\n\r\nconst Home = (props) => {\r\n\r\n  const [ currentMarketPrice, setCurrentMarketPrice ] = React.useState(0);\r\n\r\n  // if (currentMarketPrice !== 0) {\r\n  //   setCurrentMarketPrice(0);\r\n  // } else {\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <AddStockPost getStockPrice={props.getStockPrice} />\r\n      <StockHoldings\r\n      // ROI={this.props.ROI}\r\n      // currentMarketPrice={this.props.currentMarketPrice}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react'\r\nimport './LandingPage.css';\r\n\r\nexport default class LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landingPage\">\r\n        <header>\r\n        <h1>Pocket Stocks</h1>\r\n        <button className=\"join_button\" type=\"submit\">Sign up</button>\r\n      </header>\r\n      <section className=\"briefOV\">\r\n          <h3>Stock predictions in the palm of your hand</h3>\r\n        <p>[<em>placeholder for screenshot of ROI tracker. possibly a background image related to stocks.</em>]</p>\r\n        <p>\r\n          Everyone wants to say \"I told you so\", especially on Wallstreet...\r\n        </p>\r\n      </section>\r\n      <section className=\"appDesc\">\r\n          <h3>View your holdings and relative ROI</h3>\r\n        <p>[<em>placeholder for screenshot of holdings</em>]</p>\r\n        <p>Portfolio holdings, purchase price, current price, and ROI.</p>\r\n      </section>\r\n      <section className=\"signUpForm\">\r\n          <h3>Sign up to start keeping track!</h3>\r\n        <form className=\"signup-form\">\r\n          <div className=\"first-name\">\r\n            <label htmlFor=\"first-name\">First name</label>\r\n            <input\r\n              placeholder=\"First Name\"\r\n              type=\"text\"\r\n              name=\"first-name\"\r\n              id=\"first-name\"\r\n            />\r\n          </div>\r\n          <div className=\"last-name\">\r\n            <label htmlFor=\"last-name\">Last name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"last-name\"\r\n              id=\"last-name\"\r\n              placeholder=\"Last Name\"\r\n            />\r\n          </div>\r\n          <div className=\"email\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"text\" name=\"email\" id=\"email\" />\r\n          </div>          \r\n          <div className=\"username\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input type=\"text\" name=\"username\" id=\"username\" />\r\n          </div>\r\n          <div className=\"password\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" />\r\n          </div>\r\n          <button className=\"join_button\" type=\"submit\">Sign Up</button>\r\n        </form>\r\n      </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      Login\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <div>\r\n      Sign Up\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { StocksContext } from \"../context/StocksContext\";\r\n\r\nconst StockDetails = (props) => {\r\n  const { id } = useParams();\r\n  const { selectedStock, setSelectedStock } = useContext(StocksContext);\r\n  const { selectedTickerSymbol, setSelectedTickerSymbol } = useContext(\r\n    StocksContext\r\n    );\r\n  const [currentPost, setCurrentPost] = React.useState(\"\");\r\n  const [purchase_price, setPurchase_price] = React.useState(0);\r\n  const [ROI, setROI] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const url = `http://localhost:3000/api/v1/stocks/${id}`;\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n        await fetch(url, options)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\"Error: \" + response.status);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((responseJson) => {\r\n            // CALLBACK PROP TO USE SET CONTEXT ON TICKER SYMBOL //\r\n            props.setTicker(responseJson.holdings.stock.ticker_symbol);\r\n            // UPDATES THE SELECTED STOCK ON PAGE LOAD //\r\n            setSelectedStock(responseJson.holdings.stock);\r\n            // UPDATES THE POST ON PAGE LOAD //\r\n            setCurrentPost(responseJson.holdings.stock.posting);\r\n            // SETS THE PURCHASE PRICE ON PAGE LOAD //\r\n            setPurchase_price(responseJson.holdings.stock.purchase_price);\r\n          })\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n    // Empty dependency array called here, which makes it run only once on MOUNT //\r\n  }, []);\r\n  \r\n  const updateROI = () => {\r\n    // console.log(props.currentMarketPrice);\r\n    let initial = purchase_price;\r\n    let current = props.currentMarketPrice;\r\n    let ROI = (((current - initial) / initial) * 100).toFixed(2) + \"%\";\r\n    setROI(ROI);\r\n    console.log(ROI);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Renders only if a stock was selected */}\r\n      <h1>{selectedStock && selectedStock.ticker_symbol}</h1>\r\n      <div>\r\n        <p>Current Market Price: ${props.currentMarketPrice}</p>\r\n      </div>\r\n      <div>\r\n        <p>Purchase price: ${purchase_price}</p>\r\n      </div>\r\n      <div>\r\n        <p>ROI: {ROI}</p>\r\n      </div>\r\n      <div>\r\n        <p>Post: {currentPost}</p>\r\n      </div>\r\n      <button onClick={() => props.getStockPrice(selectedTickerSymbol)}>\r\n        Get current price\r\n      </button>\r\n      <br />\r\n      <button onClick={updateROI}>\r\n        Get ROI\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockDetails;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst UpdateStock = (props) => {\r\n  const [ticker_symbol, setTicker_symbol] = useState(\"\");\r\n  const [recommendation_status, setRecommendation_status] = useState(\"Select\");\r\n  const [stock_value, setStock_value] = useState(\"Select\");\r\n  const { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const url = `http://localhost:3000/api/v1/stocks/${id}`;\r\n        const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        };\r\n        await fetch(url, options)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\"Error: \" + response.status);\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((responseJson) => {\r\n            setTicker_symbol(responseJson.holdings.stock.ticker_symbol);\r\n            setRecommendation_status(\r\n              responseJson.holdings.stock.recommendation_status\r\n            );\r\n            setStock_value(responseJson.holdings.stock.stock_value);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const url = `http://localhost:3000/api/v1/stocks/${id}`;\r\n      const options = {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          ticker_symbol: ticker_symbol,\r\n          recommendation_status: recommendation_status,\r\n          stock_value: stock_value,\r\n        }),\r\n      };\r\n      await fetch(url, options)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Error: \" + response.status);\r\n          }\r\n          return response.json();\r\n        })\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    // Addds the following URL to the history //\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form action=\"submit\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"ticker_symbol\">Ticker Symbol</label>\r\n          <input\r\n            value={ticker_symbol}\r\n            onChange={(e) => setTicker_symbol(e.target.value)}\r\n            type=\"text\"\r\n            className=\"ticker_symbol\"\r\n          />\r\n        </div>\r\n        <label htmlFor=\"recommendation_status\">BUY/HOLD/SELL</label>\r\n        <select\r\n          className=\"chooseStatus\"\r\n          value={recommendation_status}\r\n          onChange={(e) => setRecommendation_status(e.target.value)}\r\n        >\r\n          <option disabled>Select</option>\r\n          <option value=\"BUY\">BUY</option>\r\n          <option value=\"HOLD\">HOLD</option>\r\n          <option value=\"SELL\">SELL</option>\r\n        </select>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"stock_value\">VALUE</label>\r\n          <select\r\n            className=\"chooseStatus\"\r\n            value={stock_value}\r\n            onChange={(e) => setStock_value(e.target.value)}\r\n          >\r\n            <option disabled>Select</option>\r\n            <option value=\"Overvalued\">Overvalued</option>\r\n            <option value=\"Undervalued\">Undervalued</option>\r\n            <option value=\"Accurate\">Accurate</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\" onClick={handleSubmit} className=\"btn\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateStock;\r\n","import React from 'react';\r\nimport './UpdatePost.css';\r\nimport UpdateStock from '../../components/UpdateStock/UpdateStock';\r\n\r\nconst UpdatePost = () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"edit-position\">\r\n        Update Position\r\n      </h1>\r\n      <UpdateStock />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdatePost;\r\n","import React, { useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport LandingPage from \"../routes/LandingPage/LandingPage\";\r\nimport Login from \"../routes/Login\";\r\nimport SignUp from \"../routes/SignUp\";\r\nimport StockDetails from \"../routes/StockDetails\";\r\nimport UpdatePost from \"../routes/UpdatePost/UpdatePost\";\r\nimport \"./App.css\";\r\nconst API_TOKEN = process.env.REACT_APP_POCKET_STOCKS_KEY;\r\n\r\n\r\nconst App = () => {\r\n  const [currentMarketPrice, setCurrentMarketPrice] = React.useState(0);\r\n  const [selectedTickerSymbol, setSelectedTickerSymbol] = React.useState(null);\r\n\r\n  // UPDATES THE TICKER SYMBOL SO IT CAN BE USED IN THE API CALL //\r\n  const setTicker = (chosenTickerSymbol) => {\r\n    setSelectedTickerSymbol(chosenTickerSymbol);\r\n  };\r\n\r\n  const getStockPrice = (ticker) => {\r\n    fetch(\r\n      `https://twelve-data1.p.rapidapi.com/price?symbol=${selectedTickerSymbol}&outputsize=30&format=json`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            `${API_TOKEN}`,\r\n          \"x-rapidapi-host\": \"twelve-data1.p.rapidapi.com\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(response.statusText);\r\n      })\r\n      .then((responseJson) => {\r\n        let price = parseFloat(responseJson.price);\r\n        let final = price.toFixed(2);\r\n        setCurrentMarketPrice(final);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route\r\n          exact\r\n          path=\"/home\"\r\n          render={() => {\r\n            return (\r\n              <Home\r\n                getStockPrice={getStockPrice}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/stocks/:id\"\r\n          render={() => {\r\n            return (\r\n              <StockDetails\r\n                getStockPrice={getStockPrice}\r\n                selectedTickerSymbol={selectedTickerSymbol}\r\n                setTicker={setTicker}\r\n                currentMarketPrice={currentMarketPrice}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Route exact path=\"/stocks/:id/update\" component={UpdatePost} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/signup\" component={SignUp} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport StockContextProvider from './context/StocksContext';\r\nimport App from \"./App/App\";\r\n\r\nReactDOM.render(\r\n  <StockContextProvider>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StockContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}